{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/View","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4kYBDC6LJJXoH7P9rWDi3vkLVB0=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/StyleSheet","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"MK7+k1V+KnvCVW7Kj2k/ydtjmVU=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Dimensions","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"ySrYx/xxJL+A+Ie+sLy/r/EEnF8=","exportNames":["*"],"imports":1}},{"name":"react-native-gesture-handler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":70,"index":181}}],"key":"HJh61WuEUBv/Tn7fS9MiHoQcOfk=","exportNames":["*"],"imports":1}},{"name":"../store/gameStore","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":182},"end":{"line":4,"column":50,"index":232}}],"key":"Nzin5vncLZu0ufFs11KibMj1WNk=","exportNames":["*"],"imports":1}},{"name":"./CowCell","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":233},"end":{"line":5,"column":32,"index":265}}],"key":"GVX3etodbkRCu+eum95b8+iWyGY=","exportNames":["*"],"imports":1}},{"name":"./UFOAbduction","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":266},"end":{"line":6,"column":42,"index":308}}],"key":"AK/PHRyFGV1jTAVFts7xnR5fWAQ=","exportNames":["*"],"imports":1}},{"name":"../utils/gameLogic","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":309},"end":{"line":7,"column":82,"index":391}}],"key":"TANvQZrKumNcUQ3lonhDGbbvRnM=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/components/GameBoard.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactNativeWebDistExportsView = require(_dependencyMap[1], \"react-native-web/dist/exports/View\");\n  var View = _interopDefault(_reactNativeWebDistExportsView);\n  var _reactNativeWebDistExportsStyleSheet = require(_dependencyMap[2], \"react-native-web/dist/exports/StyleSheet\");\n  var StyleSheet = _interopDefault(_reactNativeWebDistExportsStyleSheet);\n  var _reactNativeWebDistExportsDimensions = require(_dependencyMap[3], \"react-native-web/dist/exports/Dimensions\");\n  var Dimensions = _interopDefault(_reactNativeWebDistExportsDimensions);\n  var _reactNativeGestureHandler = require(_dependencyMap[4], \"react-native-gesture-handler\");\n  var _storeGameStore = require(_dependencyMap[5], \"../store/gameStore\");\n  var _CowCell = require(_dependencyMap[6], \"./CowCell\");\n  var CowCell = _interopDefault(_CowCell);\n  var _UFOAbduction = require(_dependencyMap[7], \"./UFOAbduction\");\n  var UFOAbduction = _interopDefault(_UFOAbduction);\n  var _utilsGameLogic = require(_dependencyMap[8], \"../utils/gameLogic\");\n  var _reactJsxDevRuntime = require(_dependencyMap[9], \"react/jsx-dev-runtime\");\n  const {\n    width\n  } = Dimensions.default.get('window');\n  const BOARD_SIZE = 8;\n  const CELL_SIZE = Math.min((width - 40) / BOARD_SIZE, 50);\n  const GameBoard = () => {\n    const {\n      board,\n      selectedCell,\n      isAnimating,\n      setBoard,\n      setSelectedCell,\n      setIsAnimating,\n      incrementScore,\n      incrementMoves,\n      setGameOver\n    } = (0, _storeGameStore.useGameStore)();\n    const boardRef = (0, _react.useRef)(board);\n    const abductingCells = (0, _react.useRef)([]);\n    (0, _react.useEffect)(() => {\n      boardRef.current = board;\n    }, [board]);\n    const handleCellPress = (row, col) => {\n      if (isAnimating) return;\n      if (!selectedCell) {\n        setSelectedCell({\n          row,\n          col\n        });\n      } else {\n        const {\n          row: sRow,\n          col: sCol\n        } = selectedCell;\n        const isAdjacent = Math.abs(row - sRow) === 1 && col === sCol || Math.abs(col - sCol) === 1 && row === sRow;\n        if (isAdjacent) {\n          performSwap(sRow, sCol, row, col);\n        } else {\n          setSelectedCell({\n            row,\n            col\n          });\n        }\n      }\n    };\n    const performSwap = async (row1, col1, row2, col2) => {\n      setIsAnimating(true);\n      const newBoard = board.map(row => [...row]);\n\n      // Swap with smooth animation\n      const temp = newBoard[row1][col1];\n      newBoard[row1][col1] = newBoard[row2][col2];\n      newBoard[row2][col2] = temp;\n      setBoard(newBoard);\n      // Wait for swap animation to complete\n      await new Promise(resolve => setTimeout(resolve, 350));\n      const matches = (0, _utilsGameLogic.checkForMatches)(newBoard);\n      if (matches.length > 0) {\n        incrementMoves();\n        setSelectedCell(null);\n        await processMatches(newBoard, matches);\n      } else {\n        // Swap back with bounce animation if no match\n        const temp = newBoard[row1][col1];\n        newBoard[row1][col1] = newBoard[row2][col2];\n        newBoard[row2][col2] = temp;\n        setBoard(newBoard);\n        setSelectedCell(null);\n        await new Promise(resolve => setTimeout(resolve, 350));\n        setIsAnimating(false);\n      }\n    };\n    const processMatches = async (currentBoard, matches) => {\n      // Store cells for UFO abduction animation\n      abductingCells.current = matches;\n\n      // Calculate score\n      const points = matches.length * 10 + (matches.length > 3 ? (matches.length - 3) * 20 : 0);\n      incrementScore(points);\n\n      // Wait for UFO animation (UFO comes, beams, lifts cows)\n      await new Promise(resolve => setTimeout(resolve, 1600));\n\n      // Remove matched cows\n      const newBoard = currentBoard.map(row => [...row]);\n      matches.forEach(({\n        row,\n        col\n      }) => {\n        newBoard[row][col] = -1;\n      });\n      setBoard(newBoard);\n      await new Promise(resolve => setTimeout(resolve, 200));\n\n      // Apply gravity and refill\n      const filledBoard = (0, _utilsGameLogic.applyGravity)(newBoard);\n      setBoard(filledBoard);\n      await new Promise(resolve => setTimeout(resolve, 400));\n\n      // Check for cascading matches\n      const newMatches = (0, _utilsGameLogic.checkForMatches)(filledBoard);\n      if (newMatches.length > 0) {\n        await processMatches(filledBoard, newMatches);\n      } else {\n        // Check if game over\n        if (!(0, _utilsGameLogic.hasValidMoves)(filledBoard)) {\n          setGameOver(true);\n        }\n        setIsAnimating(false);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNativeGestureHandler.GestureHandlerRootView, {\n      style: styles.container,\n      children: /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(View.default, {\n        style: styles.boardContainer,\n        children: [/*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(View.default, {\n          style: [styles.board, {\n            width: CELL_SIZE * BOARD_SIZE,\n            height: CELL_SIZE * BOARD_SIZE\n          }],\n          children: board.map((row, rowIndex) => row.map((color, colIndex) => /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CowCell.default, {\n            color: color,\n            row: rowIndex,\n            col: colIndex,\n            size: CELL_SIZE,\n            isSelected: selectedCell?.row === rowIndex && selectedCell?.col === colIndex,\n            onPress: () => handleCellPress(rowIndex, colIndex)\n          }, `${rowIndex}-${colIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this), /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(UFOAbduction.default, {\n          cells: abductingCells.current,\n          cellSize: CELL_SIZE,\n          boardSize: BOARD_SIZE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this);\n  };\n  const styles = StyleSheet.default.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    boardContainer: {\n      position: 'relative'\n    },\n    board: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      backgroundColor: '#162447',\n      borderRadius: 12,\n      padding: 4,\n      borderWidth: 3,\n      borderColor: '#00ff88'\n    }\n  });\n  var _default = GameBoard;\n});","lineCount":210,"map":[[13,2,171,0,"Object"],[13,8,171,0],[13,9,171,0,"defineProperty"],[13,23,171,0],[13,24,171,0,"exports"],[13,31,171,0],[14,4,171,0,"enumerable"],[14,14,171,0],[15,4,171,0,"get"],[15,7,171,0],[15,18,171,0,"get"],[15,19,171,0],[16,6,171,0],[16,13,171,0,"_default"],[16,21,171,0],[17,4,171,0],[18,2,171,0],[19,2,1,0],[19,6,1,0,"_react"],[19,12,1,0],[19,15,1,0,"require"],[19,22,1,0],[19,23,1,0,"_dependencyMap"],[19,37,1,0],[20,2,1,49],[20,6,1,49,"_reactNativeWebDistExportsView"],[20,36,1,49],[20,39,1,49,"require"],[20,46,1,49],[20,47,1,49,"_dependencyMap"],[20,61,1,49],[21,2,1,49],[21,6,1,49,"View"],[21,10,1,49],[21,13,1,49,"_interopDefault"],[21,28,1,49],[21,29,1,49,"_reactNativeWebDistExportsView"],[21,59,1,49],[22,2,1,49],[22,6,1,49,"_reactNativeWebDistExportsStyleSheet"],[22,42,1,49],[22,45,1,49,"require"],[22,52,1,49],[22,53,1,49,"_dependencyMap"],[22,67,1,49],[23,2,1,49],[23,6,1,49,"StyleSheet"],[23,16,1,49],[23,19,1,49,"_interopDefault"],[23,34,1,49],[23,35,1,49,"_reactNativeWebDistExportsStyleSheet"],[23,71,1,49],[24,2,1,49],[24,6,1,49,"_reactNativeWebDistExportsDimensions"],[24,42,1,49],[24,45,1,49,"require"],[24,52,1,49],[24,53,1,49,"_dependencyMap"],[24,67,1,49],[25,2,1,49],[25,6,1,49,"Dimensions"],[25,16,1,49],[25,19,1,49,"_interopDefault"],[25,34,1,49],[25,35,1,49,"_reactNativeWebDistExportsDimensions"],[25,71,1,49],[26,2,3,0],[26,6,3,0,"_reactNativeGestureHandler"],[26,32,3,0],[26,35,3,0,"require"],[26,42,3,0],[26,43,3,0,"_dependencyMap"],[26,57,3,0],[27,2,4,0],[27,6,4,0,"_storeGameStore"],[27,21,4,0],[27,24,4,0,"require"],[27,31,4,0],[27,32,4,0,"_dependencyMap"],[27,46,4,0],[28,2,5,0],[28,6,5,0,"_CowCell"],[28,14,5,0],[28,17,5,0,"require"],[28,24,5,0],[28,25,5,0,"_dependencyMap"],[28,39,5,0],[29,2,5,0],[29,6,5,0,"CowCell"],[29,13,5,0],[29,16,5,0,"_interopDefault"],[29,31,5,0],[29,32,5,0,"_CowCell"],[29,40,5,0],[30,2,6,0],[30,6,6,0,"_UFOAbduction"],[30,19,6,0],[30,22,6,0,"require"],[30,29,6,0],[30,30,6,0,"_dependencyMap"],[30,44,6,0],[31,2,6,0],[31,6,6,0,"UFOAbduction"],[31,18,6,0],[31,21,6,0,"_interopDefault"],[31,36,6,0],[31,37,6,0,"_UFOAbduction"],[31,50,6,0],[32,2,7,0],[32,6,7,0,"_utilsGameLogic"],[32,21,7,0],[32,24,7,0,"require"],[32,31,7,0],[32,32,7,0,"_dependencyMap"],[32,46,7,0],[33,2,7,82],[33,6,7,82,"_reactJsxDevRuntime"],[33,25,7,82],[33,28,7,82,"require"],[33,35,7,82],[33,36,7,82,"_dependencyMap"],[33,50,7,82],[34,2,9,0],[34,8,9,6],[35,4,9,8,"width"],[36,2,9,14],[36,3,9,15],[36,6,9,18,"Dimensions"],[36,16,9,28],[36,17,9,28,"default"],[36,24,9,28],[36,25,9,29,"get"],[36,28,9,32],[36,29,9,33],[36,37,9,41],[36,38,9,42],[37,2,10,0],[37,8,10,6,"BOARD_SIZE"],[37,18,10,16],[37,21,10,19],[37,22,10,20],[38,2,11,0],[38,8,11,6,"CELL_SIZE"],[38,17,11,15],[38,20,11,18,"Math"],[38,24,11,22],[38,25,11,23,"min"],[38,28,11,26],[38,29,11,27],[38,30,11,28,"width"],[38,35,11,33],[38,38,11,36],[38,40,11,38],[38,44,11,42,"BOARD_SIZE"],[38,54,11,52],[38,56,11,54],[38,58,11,56],[38,59,11,57],[39,2,13,0],[39,8,13,6,"GameBoard"],[39,17,13,25],[39,20,13,28,"GameBoard"],[39,21,13,28],[39,26,13,34],[40,4,14,2],[40,10,14,8],[41,6,15,4,"board"],[41,11,15,9],[42,6,16,4,"selectedCell"],[42,18,16,16],[43,6,17,4,"isAnimating"],[43,17,17,15],[44,6,18,4,"setBoard"],[44,14,18,12],[45,6,19,4,"setSelectedCell"],[45,21,19,19],[46,6,20,4,"setIsAnimating"],[46,20,20,18],[47,6,21,4,"incrementScore"],[47,20,21,18],[48,6,22,4,"incrementMoves"],[48,20,22,18],[49,6,23,4,"setGameOver"],[50,4,24,2],[50,5,24,3],[50,8,24,6],[50,12,24,6,"useGameStore"],[50,27,24,18],[50,28,24,18,"useGameStore"],[50,40,24,18],[50,42,24,19],[50,43,24,20],[51,4,26,2],[51,10,26,8,"boardRef"],[51,18,26,16],[51,21,26,19],[51,25,26,19,"useRef"],[51,31,26,25],[51,32,26,25,"useRef"],[51,38,26,25],[51,40,26,26,"board"],[51,45,26,31],[51,46,26,32],[52,4,27,2],[52,10,27,8,"abductingCells"],[52,24,27,22],[52,27,27,25],[52,31,27,25,"useRef"],[52,37,27,31],[52,38,27,31,"useRef"],[52,44,27,31],[52,46,27,64],[52,48,27,66],[52,49,27,67],[53,4,29,2],[53,8,29,2,"useEffect"],[53,14,29,11],[53,15,29,11,"useEffect"],[53,24,29,11],[53,26,29,12],[53,32,29,18],[54,6,30,4,"boardRef"],[54,14,30,12],[54,15,30,13,"current"],[54,22,30,20],[54,25,30,23,"board"],[54,30,30,28],[55,4,31,2],[55,5,31,3],[55,7,31,5],[55,8,31,6,"board"],[55,13,31,11],[55,14,31,12],[55,15,31,13],[56,4,33,2],[56,10,33,8,"handleCellPress"],[56,25,33,23],[56,28,33,26,"handleCellPress"],[56,29,33,27,"row"],[56,32,33,38],[56,34,33,40,"col"],[56,37,33,51],[56,42,33,56],[57,6,34,4],[57,10,34,8,"isAnimating"],[57,21,34,19],[57,23,34,21],[58,6,36,4],[58,10,36,8],[58,11,36,9,"selectedCell"],[58,23,36,21],[58,25,36,23],[59,8,37,6,"setSelectedCell"],[59,23,37,21],[59,24,37,22],[60,10,37,24,"row"],[60,13,37,27],[61,10,37,29,"col"],[62,8,37,33],[62,9,37,34],[62,10,37,35],[63,6,38,4],[63,7,38,5],[63,13,38,11],[64,8,39,6],[64,14,39,12],[65,10,39,14,"row"],[65,13,39,17],[65,15,39,19,"sRow"],[65,19,39,23],[66,10,39,25,"col"],[66,13,39,28],[66,15,39,30,"sCol"],[67,8,39,35],[67,9,39,36],[67,12,39,39,"selectedCell"],[67,24,39,51],[68,8,40,6],[68,14,40,12,"isAdjacent"],[68,24,40,22],[68,27,41,9,"Math"],[68,31,41,13],[68,32,41,14,"abs"],[68,35,41,17],[68,36,41,18,"row"],[68,39,41,21],[68,42,41,24,"sRow"],[68,46,41,28],[68,47,41,29],[68,52,41,34],[68,53,41,35],[68,57,41,39,"col"],[68,60,41,42],[68,65,41,47,"sCol"],[68,69,41,51],[68,73,42,9,"Math"],[68,77,42,13],[68,78,42,14,"abs"],[68,81,42,17],[68,82,42,18,"col"],[68,85,42,21],[68,88,42,24,"sCol"],[68,92,42,28],[68,93,42,29],[68,98,42,34],[68,99,42,35],[68,103,42,39,"row"],[68,106,42,42],[68,111,42,47,"sRow"],[68,115,42,52],[69,8,44,6],[69,12,44,10,"isAdjacent"],[69,22,44,20],[69,24,44,22],[70,10,45,8,"performSwap"],[70,21,45,19],[70,22,45,20,"sRow"],[70,26,45,24],[70,28,45,26,"sCol"],[70,32,45,30],[70,34,45,32,"row"],[70,37,45,35],[70,39,45,37,"col"],[70,42,45,40],[70,43,45,41],[71,8,46,6],[71,9,46,7],[71,15,46,13],[72,10,47,8,"setSelectedCell"],[72,25,47,23],[72,26,47,24],[73,12,47,26,"row"],[73,15,47,29],[74,12,47,31,"col"],[75,10,47,35],[75,11,47,36],[75,12,47,37],[76,8,48,6],[77,6,49,4],[78,4,50,2],[78,5,50,3],[79,4,52,2],[79,10,52,8,"performSwap"],[79,21,52,19],[79,24,52,22],[79,30,52,22,"performSwap"],[79,31,52,29,"row1"],[79,35,52,41],[79,37,52,43,"col1"],[79,41,52,55],[79,43,52,57,"row2"],[79,47,52,69],[79,49,52,71,"col2"],[79,53,52,83],[79,58,52,88],[80,6,53,4,"setIsAnimating"],[80,20,53,18],[80,21,53,19],[80,25,53,23],[80,26,53,24],[81,6,54,4],[81,12,54,10,"newBoard"],[81,20,54,18],[81,23,54,21,"board"],[81,28,54,26],[81,29,54,27,"map"],[81,32,54,30],[81,33,54,32,"row"],[81,36,54,35],[81,40,54,40],[81,41,54,41],[81,44,54,44,"row"],[81,47,54,47],[81,48,54,48],[81,49,54,49],[83,6,56,4],[84,6,57,4],[84,12,57,10,"temp"],[84,16,57,14],[84,19,57,17,"newBoard"],[84,27,57,25],[84,28,57,26,"row1"],[84,32,57,30],[84,33,57,31],[84,34,57,32,"col1"],[84,38,57,36],[84,39,57,37],[85,6,58,4,"newBoard"],[85,14,58,12],[85,15,58,13,"row1"],[85,19,58,17],[85,20,58,18],[85,21,58,19,"col1"],[85,25,58,23],[85,26,58,24],[85,29,58,27,"newBoard"],[85,37,58,35],[85,38,58,36,"row2"],[85,42,58,40],[85,43,58,41],[85,44,58,42,"col2"],[85,48,58,46],[85,49,58,47],[86,6,59,4,"newBoard"],[86,14,59,12],[86,15,59,13,"row2"],[86,19,59,17],[86,20,59,18],[86,21,59,19,"col2"],[86,25,59,23],[86,26,59,24],[86,29,59,27,"temp"],[86,33,59,31],[87,6,61,4,"setBoard"],[87,14,61,12],[87,15,61,13,"newBoard"],[87,23,61,21],[87,24,61,22],[88,6,62,4],[89,6,63,4],[89,12,63,10],[89,16,63,14,"Promise"],[89,23,63,21],[89,24,63,23,"resolve"],[89,31,63,30],[89,35,63,35,"setTimeout"],[89,45,63,45],[89,46,63,46,"resolve"],[89,53,63,53],[89,55,63,55],[89,58,63,58],[89,59,63,59],[89,60,63,60],[90,6,65,4],[90,12,65,10,"matches"],[90,19,65,17],[90,22,65,20],[90,26,65,20,"checkForMatches"],[90,41,65,35],[90,42,65,35,"checkForMatches"],[90,57,65,35],[90,59,65,36,"newBoard"],[90,67,65,44],[90,68,65,45],[91,6,67,4],[91,10,67,8,"matches"],[91,17,67,15],[91,18,67,16,"length"],[91,24,67,22],[91,27,67,25],[91,28,67,26],[91,30,67,28],[92,8,68,6,"incrementMoves"],[92,22,68,20],[92,23,68,21],[92,24,68,22],[93,8,69,6,"setSelectedCell"],[93,23,69,21],[93,24,69,22],[93,28,69,26],[93,29,69,27],[94,8,70,6],[94,14,70,12,"processMatches"],[94,28,70,26],[94,29,70,27,"newBoard"],[94,37,70,35],[94,39,70,37,"matches"],[94,46,70,44],[94,47,70,45],[95,6,71,4],[95,7,71,5],[95,13,71,11],[96,8,72,6],[97,8,73,6],[97,14,73,12,"temp"],[97,18,73,16],[97,21,73,19,"newBoard"],[97,29,73,27],[97,30,73,28,"row1"],[97,34,73,32],[97,35,73,33],[97,36,73,34,"col1"],[97,40,73,38],[97,41,73,39],[98,8,74,6,"newBoard"],[98,16,74,14],[98,17,74,15,"row1"],[98,21,74,19],[98,22,74,20],[98,23,74,21,"col1"],[98,27,74,25],[98,28,74,26],[98,31,74,29,"newBoard"],[98,39,74,37],[98,40,74,38,"row2"],[98,44,74,42],[98,45,74,43],[98,46,74,44,"col2"],[98,50,74,48],[98,51,74,49],[99,8,75,6,"newBoard"],[99,16,75,14],[99,17,75,15,"row2"],[99,21,75,19],[99,22,75,20],[99,23,75,21,"col2"],[99,27,75,25],[99,28,75,26],[99,31,75,29,"temp"],[99,35,75,33],[100,8,76,6,"setBoard"],[100,16,76,14],[100,17,76,15,"newBoard"],[100,25,76,23],[100,26,76,24],[101,8,77,6,"setSelectedCell"],[101,23,77,21],[101,24,77,22],[101,28,77,26],[101,29,77,27],[102,8,78,6],[102,14,78,12],[102,18,78,16,"Promise"],[102,25,78,23],[102,26,78,25,"resolve"],[102,33,78,32],[102,37,78,37,"setTimeout"],[102,47,78,47],[102,48,78,48,"resolve"],[102,55,78,55],[102,57,78,57],[102,60,78,60],[102,61,78,61],[102,62,78,62],[103,8,79,6,"setIsAnimating"],[103,22,79,20],[103,23,79,21],[103,28,79,26],[103,29,79,27],[104,6,80,4],[105,4,81,2],[105,5,81,3],[106,4,83,2],[106,10,83,8,"processMatches"],[106,24,83,22],[106,27,83,25],[106,33,83,25,"processMatches"],[106,34,83,32,"currentBoard"],[106,46,83,56],[106,48,83,58,"matches"],[106,55,83,97],[106,60,83,102],[107,6,84,4],[108,6,85,4,"abductingCells"],[108,20,85,18],[108,21,85,19,"current"],[108,28,85,26],[108,31,85,29,"matches"],[108,38,85,36],[110,6,87,4],[111,6,88,4],[111,12,88,10,"points"],[111,18,88,16],[111,21,88,19,"matches"],[111,28,88,26],[111,29,88,27,"length"],[111,35,88,33],[111,38,88,36],[111,40,88,38],[111,44,88,42,"matches"],[111,51,88,49],[111,52,88,50,"length"],[111,58,88,56],[111,61,88,59],[111,62,88,60],[111,65,88,63],[111,66,88,64,"matches"],[111,73,88,71],[111,74,88,72,"length"],[111,80,88,78],[111,83,88,81],[111,84,88,82],[111,88,88,86],[111,90,88,88],[111,93,88,91],[111,94,88,92],[111,95,88,93],[112,6,89,4,"incrementScore"],[112,20,89,18],[112,21,89,19,"points"],[112,27,89,25],[112,28,89,26],[114,6,91,4],[115,6,92,4],[115,12,92,10],[115,16,92,14,"Promise"],[115,23,92,21],[115,24,92,23,"resolve"],[115,31,92,30],[115,35,92,35,"setTimeout"],[115,45,92,45],[115,46,92,46,"resolve"],[115,53,92,53],[115,55,92,55],[115,59,92,59],[115,60,92,60],[115,61,92,61],[117,6,94,4],[118,6,95,4],[118,12,95,10,"newBoard"],[118,20,95,18],[118,23,95,21,"currentBoard"],[118,35,95,33],[118,36,95,34,"map"],[118,39,95,37],[118,40,95,39,"row"],[118,43,95,42],[118,47,95,47],[118,48,95,48],[118,51,95,51,"row"],[118,54,95,54],[118,55,95,55],[118,56,95,56],[119,6,96,4,"matches"],[119,13,96,11],[119,14,96,12,"forEach"],[119,21,96,19],[119,22,96,20],[119,23,96,21],[120,8,96,23,"row"],[120,11,96,26],[121,8,96,28,"col"],[122,6,96,32],[122,7,96,33],[122,12,96,38],[123,8,97,6,"newBoard"],[123,16,97,14],[123,17,97,15,"row"],[123,20,97,18],[123,21,97,19],[123,22,97,20,"col"],[123,25,97,23],[123,26,97,24],[123,29,97,27],[123,30,97,28],[123,31,97,29],[124,6,98,4],[124,7,98,5],[124,8,98,6],[125,6,100,4,"setBoard"],[125,14,100,12],[125,15,100,13,"newBoard"],[125,23,100,21],[125,24,100,22],[126,6,101,4],[126,12,101,10],[126,16,101,14,"Promise"],[126,23,101,21],[126,24,101,23,"resolve"],[126,31,101,30],[126,35,101,35,"setTimeout"],[126,45,101,45],[126,46,101,46,"resolve"],[126,53,101,53],[126,55,101,55],[126,58,101,58],[126,59,101,59],[126,60,101,60],[128,6,103,4],[129,6,104,4],[129,12,104,10,"filledBoard"],[129,23,104,21],[129,26,104,24],[129,30,104,24,"applyGravity"],[129,45,104,36],[129,46,104,36,"applyGravity"],[129,58,104,36],[129,60,104,37,"newBoard"],[129,68,104,45],[129,69,104,46],[130,6,105,4,"setBoard"],[130,14,105,12],[130,15,105,13,"filledBoard"],[130,26,105,24],[130,27,105,25],[131,6,106,4],[131,12,106,10],[131,16,106,14,"Promise"],[131,23,106,21],[131,24,106,23,"resolve"],[131,31,106,30],[131,35,106,35,"setTimeout"],[131,45,106,45],[131,46,106,46,"resolve"],[131,53,106,53],[131,55,106,55],[131,58,106,58],[131,59,106,59],[131,60,106,60],[133,6,108,4],[134,6,109,4],[134,12,109,10,"newMatches"],[134,22,109,20],[134,25,109,23],[134,29,109,23,"checkForMatches"],[134,44,109,38],[134,45,109,38,"checkForMatches"],[134,60,109,38],[134,62,109,39,"filledBoard"],[134,73,109,50],[134,74,109,51],[135,6,110,4],[135,10,110,8,"newMatches"],[135,20,110,18],[135,21,110,19,"length"],[135,27,110,25],[135,30,110,28],[135,31,110,29],[135,33,110,31],[136,8,111,6],[136,14,111,12,"processMatches"],[136,28,111,26],[136,29,111,27,"filledBoard"],[136,40,111,38],[136,42,111,40,"newMatches"],[136,52,111,50],[136,53,111,51],[137,6,112,4],[137,7,112,5],[137,13,112,11],[138,8,113,6],[139,8,114,6],[139,12,114,10],[139,13,114,11],[139,17,114,11,"hasValidMoves"],[139,32,114,24],[139,33,114,24,"hasValidMoves"],[139,46,114,24],[139,48,114,25,"filledBoard"],[139,59,114,36],[139,60,114,37],[139,62,114,39],[140,10,115,8,"setGameOver"],[140,21,115,19],[140,22,115,20],[140,26,115,24],[140,27,115,25],[141,8,116,6],[142,8,117,6,"setIsAnimating"],[142,22,117,20],[142,23,117,21],[142,28,117,26],[142,29,117,27],[143,6,118,4],[144,4,119,2],[144,5,119,3],[145,4,121,2],[145,24,122,4],[145,28,122,4,"_reactJsxDevRuntime"],[145,47,122,4],[145,48,122,4,"jsxDEV"],[145,54,122,4],[145,56,122,5,"_reactNativeGestureHandler"],[145,82,122,27],[145,83,122,27,"GestureHandlerRootView"],[145,105,122,27],[146,6,122,28,"style"],[146,11,122,33],[146,13,122,35,"styles"],[146,19,122,41],[146,20,122,42,"container"],[146,29,122,52],[147,6,122,52,"children"],[147,14,122,52],[147,29,123,6],[147,33,123,6,"_reactJsxDevRuntime"],[147,52,123,6],[147,53,123,6,"jsxDEV"],[147,59,123,6],[147,61,123,7,"View"],[147,65,123,11],[147,66,123,11,"default"],[147,73,123,11],[148,8,123,12,"style"],[148,13,123,17],[148,15,123,19,"styles"],[148,21,123,25],[148,22,123,26,"boardContainer"],[148,36,123,41],[149,8,123,41,"children"],[149,16,123,41],[149,32,124,8],[149,36,124,8,"_reactJsxDevRuntime"],[149,55,124,8],[149,56,124,8,"jsxDEV"],[149,62,124,8],[149,64,124,9,"View"],[149,68,124,13],[149,69,124,13,"default"],[149,76,124,13],[150,10,124,14,"style"],[150,15,124,19],[150,17,124,21],[150,18,124,22,"styles"],[150,24,124,28],[150,25,124,29,"board"],[150,30,124,34],[150,32,124,36],[151,12,124,38,"width"],[151,17,124,43],[151,19,124,45,"CELL_SIZE"],[151,28,124,54],[151,31,124,57,"BOARD_SIZE"],[151,41,124,67],[152,12,124,69,"height"],[152,18,124,75],[152,20,124,77,"CELL_SIZE"],[152,29,124,86],[152,32,124,89,"BOARD_SIZE"],[153,10,124,100],[153,11,124,101],[153,12,124,103],[154,10,124,103,"children"],[154,18,124,103],[154,20,125,11,"board"],[154,25,125,16],[154,26,125,17,"map"],[154,29,125,20],[154,30,125,21],[154,31,125,22,"row"],[154,34,125,25],[154,36,125,27,"rowIndex"],[154,44,125,35],[154,49,126,12,"row"],[154,52,126,15],[154,53,126,16,"map"],[154,56,126,19],[154,57,126,20],[154,58,126,21,"color"],[154,63,126,26],[154,65,126,28,"colIndex"],[154,73,126,36],[154,91,127,14],[154,95,127,14,"_reactJsxDevRuntime"],[154,114,127,14],[154,115,127,14,"jsxDEV"],[154,121,127,14],[154,123,127,15,"CowCell"],[154,130,127,22],[154,131,127,22,"default"],[154,138,127,22],[155,12,129,16,"color"],[155,17,129,21],[155,19,129,23,"color"],[155,24,129,29],[156,12,130,16,"row"],[156,15,130,19],[156,17,130,21,"rowIndex"],[156,25,130,30],[157,12,131,16,"col"],[157,15,131,19],[157,17,131,21,"colIndex"],[157,25,131,30],[158,12,132,16,"size"],[158,16,132,20],[158,18,132,22,"CELL_SIZE"],[158,27,132,32],[159,12,133,16,"isSelected"],[159,22,133,26],[159,24,134,18,"selectedCell"],[159,36,134,30],[159,38,134,32,"row"],[159,41,134,35],[159,46,134,40,"rowIndex"],[159,54,134,48],[159,58,134,52,"selectedCell"],[159,70,134,64],[159,72,134,66,"col"],[159,75,134,69],[159,80,134,74,"colIndex"],[159,88,135,17],[160,12,136,16,"onPress"],[160,19,136,23],[160,21,136,25,"onPress"],[160,22,136,25],[160,27,136,31,"handleCellPress"],[160,42,136,46],[160,43,136,47,"rowIndex"],[160,51,136,55],[160,53,136,57,"colIndex"],[160,61,136,65],[161,10,136,67],[161,13,128,21],[161,16,128,24,"rowIndex"],[161,24,128,32],[161,28,128,36,"colIndex"],[161,36,128,44],[161,38,128,46],[162,12,128,46,"fileName"],[162,20,128,46],[162,22,128,46,"_jsxFileName"],[162,34,128,46],[163,12,128,46,"lineNumber"],[163,22,128,46],[164,12,128,46,"columnNumber"],[164,24,128,46],[165,10,128,46],[165,17,137,15],[165,18,138,13],[165,19,139,10],[166,8,139,11],[167,10,139,11,"fileName"],[167,18,139,11],[167,20,139,11,"_jsxFileName"],[167,32,139,11],[168,10,139,11,"lineNumber"],[168,20,139,11],[169,10,139,11,"columnNumber"],[169,22,139,11],[170,8,139,11],[170,15,140,14],[170,16,140,15],[170,31,141,8],[170,35,141,8,"_reactJsxDevRuntime"],[170,54,141,8],[170,55,141,8,"jsxDEV"],[170,61,141,8],[170,63,141,9,"UFOAbduction"],[170,75,141,21],[170,76,141,21,"default"],[170,83,141,21],[171,10,142,10,"cells"],[171,15,142,15],[171,17,142,17,"abductingCells"],[171,31,142,31],[171,32,142,32,"current"],[171,39,142,40],[172,10,143,10,"cellSize"],[172,18,143,18],[172,20,143,20,"CELL_SIZE"],[172,29,143,30],[173,10,144,10,"boardSize"],[173,19,144,19],[173,21,144,21,"BOARD_SIZE"],[174,8,144,32],[175,10,144,32,"fileName"],[175,18,144,32],[175,20,144,32,"_jsxFileName"],[175,32,144,32],[176,10,144,32,"lineNumber"],[176,20,144,32],[177,10,144,32,"columnNumber"],[177,22,144,32],[178,8,144,32],[178,15,145,9],[178,16,145,10],[179,6,145,10],[180,8,145,10,"fileName"],[180,16,145,10],[180,18,145,10,"_jsxFileName"],[180,30,145,10],[181,8,145,10,"lineNumber"],[181,18,145,10],[182,8,145,10,"columnNumber"],[182,20,145,10],[183,6,145,10],[183,13,146,12],[184,4,146,13],[185,6,146,13,"fileName"],[185,14,146,13],[185,16,146,13,"_jsxFileName"],[185,28,146,13],[186,6,146,13,"lineNumber"],[186,16,146,13],[187,6,146,13,"columnNumber"],[187,18,146,13],[188,4,146,13],[188,11,147,28],[188,12,147,29],[189,2,149,0],[189,3,149,1],[190,2,151,0],[190,8,151,6,"styles"],[190,14,151,12],[190,17,151,15,"StyleSheet"],[190,27,151,25],[190,28,151,25,"default"],[190,35,151,25],[190,36,151,26,"create"],[190,42,151,32],[190,43,151,33],[191,4,152,2,"container"],[191,13,152,11],[191,15,152,13],[192,6,153,4,"flex"],[192,10,153,8],[192,12,153,10],[192,13,153,11],[193,6,154,4,"justifyContent"],[193,20,154,18],[193,22,154,20],[193,30,154,28],[194,6,155,4,"alignItems"],[194,16,155,14],[194,18,155,16],[195,4,156,2],[195,5,156,3],[196,4,157,2,"boardContainer"],[196,18,157,16],[196,20,157,18],[197,6,158,4,"position"],[197,14,158,12],[197,16,158,14],[198,4,159,2],[198,5,159,3],[199,4,160,2,"board"],[199,9,160,7],[199,11,160,9],[200,6,161,4,"flexDirection"],[200,19,161,17],[200,21,161,19],[200,26,161,24],[201,6,162,4,"flexWrap"],[201,14,162,12],[201,16,162,14],[201,22,162,20],[202,6,163,4,"backgroundColor"],[202,21,163,19],[202,23,163,21],[202,32,163,30],[203,6,164,4,"borderRadius"],[203,18,164,16],[203,20,164,18],[203,22,164,20],[204,6,165,4,"padding"],[204,13,165,11],[204,15,165,13],[204,16,165,14],[205,6,166,4,"borderWidth"],[205,17,166,15],[205,19,166,17],[205,20,166,18],[206,6,167,4,"borderColor"],[206,17,167,15],[206,19,167,17],[207,4,168,2],[208,2,169,0],[208,3,169,1],[208,4,169,2],[209,2,171,0],[209,6,171,0,"_default"],[209,14,171,0],[209,17,171,15,"GameBoard"],[209,26,171,24],[210,0,171,25],[210,3]],"functionMap":{"names":["<global>","GameBoard","useEffect$argument_0","handleCellPress","performSwap","board.map$argument_0","Promise$argument_0","processMatches","currentBoard.map$argument_0","matches.forEach$argument_0","row.map$argument_0","CowCell.props.onPress"],"mappings":"AAA;4BCY;YCgB;GDE;0BEE;GFiB;sBGE;+BCE,iBD;sBES,qCF;wBEe,qCF;GHG;yBME;sBDS,sCC;sCCG,iBD;oBEC;KFE;sBDG,qCC;sBDK,qCC;GNa;qBIM;oBKC;yBCU,yCD;aLE,CJ;CDW"},"hasCjsExports":false},"type":"js/module"}]}