{"dependencies":[{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useGameStore\", {\n    enumerable: true,\n    get: function () {\n      return useGameStore;\n    }\n  });\n  var _zustand = require(_dependencyMap[0], \"zustand\");\n  const BOARD_SIZE = 8;\n  const NUM_COLORS = 5;\n\n  // Generate initial board without matches\n  const generateInitialBoard = () => {\n    const board = [];\n    for (let row = 0; row < BOARD_SIZE; row++) {\n      board[row] = [];\n      for (let col = 0; col < BOARD_SIZE; col++) {\n        let color;\n        do {\n          color = Math.floor(Math.random() * NUM_COLORS);\n        } while (col >= 2 && board[row][col - 1] === color && board[row][col - 2] === color || row >= 2 && board[row - 1][col] === color && board[row - 2][col] === color);\n        board[row][col] = color;\n      }\n    }\n    return board;\n  };\n  const useGameStore = (0, _zustand.create)(set => ({\n    board: generateInitialBoard(),\n    score: 0,\n    moves: 0,\n    gameOver: false,\n    selectedCell: null,\n    isAnimating: false,\n    setBoard: board => set({\n      board\n    }),\n    incrementScore: points => set(state => ({\n      score: state.score + points\n    })),\n    incrementMoves: () => set(state => ({\n      moves: state.moves + 1\n    })),\n    setGameOver: gameOver => set({\n      gameOver\n    }),\n    setSelectedCell: cell => set({\n      selectedCell: cell\n    }),\n    setIsAnimating: isAnimating => set({\n      isAnimating\n    }),\n    resetGame: () => set({\n      board: generateInitialBoard(),\n      score: 0,\n      moves: 0,\n      gameOver: false,\n      selectedCell: null,\n      isAnimating: false\n    })\n  }));\n});","lineCount":66,"map":[[7,2,52,0,"Object"],[7,8,52,0],[7,9,52,0,"defineProperty"],[7,23,52,0],[7,24,52,0,"exports"],[7,31,52,0],[8,4,52,0,"enumerable"],[8,14,52,0],[9,4,52,0,"get"],[9,7,52,0],[9,18,52,0,"get"],[9,19,52,0],[10,6,52,0],[10,13,52,0,"useGameStore"],[10,25,52,0],[11,4,52,0],[12,2,52,0],[13,2,1,0],[13,6,1,0,"_zustand"],[13,14,1,0],[13,17,1,0,"require"],[13,24,1,0],[13,25,1,0,"_dependencyMap"],[13,39,1,0],[14,2,28,0],[14,8,28,6,"BOARD_SIZE"],[14,18,28,16],[14,21,28,19],[14,22,28,20],[15,2,29,0],[15,8,29,6,"NUM_COLORS"],[15,18,29,16],[15,21,29,19],[15,22,29,20],[17,2,31,0],[18,2,32,0],[18,8,32,6,"generateInitialBoard"],[18,28,32,26],[18,31,32,29,"generateInitialBoard"],[18,32,32,29],[18,37,32,47],[19,4,33,2],[19,10,33,8,"board"],[19,15,33,25],[19,18,33,28],[19,20,33,30],[20,4,35,2],[20,9,35,7],[20,13,35,11,"row"],[20,16,35,14],[20,19,35,17],[20,20,35,18],[20,22,35,20,"row"],[20,25,35,23],[20,28,35,26,"BOARD_SIZE"],[20,38,35,36],[20,40,35,38,"row"],[20,43,35,41],[20,45,35,43],[20,47,35,45],[21,6,36,4,"board"],[21,11,36,9],[21,12,36,10,"row"],[21,15,36,13],[21,16,36,14],[21,19,36,17],[21,21,36,19],[22,6,37,4],[22,11,37,9],[22,15,37,13,"col"],[22,18,37,16],[22,21,37,19],[22,22,37,20],[22,24,37,22,"col"],[22,27,37,25],[22,30,37,28,"BOARD_SIZE"],[22,40,37,38],[22,42,37,40,"col"],[22,45,37,43],[22,47,37,45],[22,49,37,47],[23,8,38,6],[23,12,38,10,"color"],[23,17,38,15],[24,8,39,6],[24,11,39,9],[25,10,40,8,"color"],[25,15,40,13],[25,18,40,16,"Math"],[25,22,40,20],[25,23,40,21,"floor"],[25,28,40,26],[25,29,40,27,"Math"],[25,33,40,31],[25,34,40,32,"random"],[25,40,40,38],[25,41,40,39],[25,42,40,40],[25,45,40,43,"NUM_COLORS"],[25,55,40,53],[25,56,40,54],[26,8,41,6],[26,9,41,7],[26,17,42,9,"col"],[26,20,42,12],[26,24,42,16],[26,25,42,17],[26,29,42,21,"board"],[26,34,42,26],[26,35,42,27,"row"],[26,38,42,30],[26,39,42,31],[26,40,42,32,"col"],[26,43,42,35],[26,46,42,38],[26,47,42,39],[26,48,42,40],[26,53,42,45,"color"],[26,58,42,50],[26,62,42,54,"board"],[26,67,42,59],[26,68,42,60,"row"],[26,71,42,63],[26,72,42,64],[26,73,42,65,"col"],[26,76,42,68],[26,79,42,71],[26,80,42,72],[26,81,42,73],[26,86,42,78,"color"],[26,91,42,83],[26,95,43,9,"row"],[26,98,43,12],[26,102,43,16],[26,103,43,17],[26,107,43,21,"board"],[26,112,43,26],[26,113,43,27,"row"],[26,116,43,30],[26,119,43,33],[26,120,43,34],[26,121,43,35],[26,122,43,36,"col"],[26,125,43,39],[26,126,43,40],[26,131,43,45,"color"],[26,136,43,50],[26,140,43,54,"board"],[26,145,43,59],[26,146,43,60,"row"],[26,149,43,63],[26,152,43,66],[26,153,43,67],[26,154,43,68],[26,155,43,69,"col"],[26,158,43,72],[26,159,43,73],[26,164,43,78,"color"],[26,169,43,84],[27,8,45,6,"board"],[27,13,45,11],[27,14,45,12,"row"],[27,17,45,15],[27,18,45,16],[27,19,45,17,"col"],[27,22,45,20],[27,23,45,21],[27,26,45,24,"color"],[27,31,45,29],[28,6,46,4],[29,4,47,2],[30,4,49,2],[30,11,49,9,"board"],[30,16,49,14],[31,2,50,0],[31,3,50,1],[32,2,52,7],[32,8,52,13,"useGameStore"],[32,20,52,25],[32,23,52,28],[32,27,52,28,"create"],[32,35,52,34],[32,36,52,34,"create"],[32,42,52,34],[32,44,52,47,"set"],[32,47,52,50],[32,52,52,56],[33,4,53,2,"board"],[33,9,53,7],[33,11,53,9,"generateInitialBoard"],[33,31,53,29],[33,32,53,30],[33,33,53,31],[34,4,54,2,"score"],[34,9,54,7],[34,11,54,9],[34,12,54,10],[35,4,55,2,"moves"],[35,9,55,7],[35,11,55,9],[35,12,55,10],[36,4,56,2,"gameOver"],[36,12,56,10],[36,14,56,12],[36,19,56,17],[37,4,57,2,"selectedCell"],[37,16,57,14],[37,18,57,16],[37,22,57,20],[38,4,58,2,"isAnimating"],[38,15,58,13],[38,17,58,15],[38,22,58,20],[39,4,60,2,"setBoard"],[39,12,60,10],[39,14,60,13,"board"],[39,19,60,18],[39,23,60,23,"set"],[39,26,60,26],[39,27,60,27],[40,6,60,29,"board"],[41,4,60,35],[41,5,60,36],[41,6,60,37],[42,4,61,2,"incrementScore"],[42,18,61,16],[42,20,61,19,"points"],[42,26,61,25],[42,30,61,30,"set"],[42,33,61,33],[42,34,61,35,"state"],[42,39,61,40],[42,44,61,46],[43,6,61,48,"score"],[43,11,61,53],[43,13,61,55,"state"],[43,18,61,60],[43,19,61,61,"score"],[43,24,61,66],[43,27,61,69,"points"],[44,4,61,76],[44,5,61,77],[44,6,61,78],[44,7,61,79],[45,4,62,2,"incrementMoves"],[45,18,62,16],[45,20,62,18,"incrementMoves"],[45,21,62,18],[45,26,62,24,"set"],[45,29,62,27],[45,30,62,29,"state"],[45,35,62,34],[45,40,62,40],[46,6,62,42,"moves"],[46,11,62,47],[46,13,62,49,"state"],[46,18,62,54],[46,19,62,55,"moves"],[46,24,62,60],[46,27,62,63],[47,4,62,65],[47,5,62,66],[47,6,62,67],[47,7,62,68],[48,4,63,2,"setGameOver"],[48,15,63,13],[48,17,63,16,"gameOver"],[48,25,63,24],[48,29,63,29,"set"],[48,32,63,32],[48,33,63,33],[49,6,63,35,"gameOver"],[50,4,63,44],[50,5,63,45],[50,6,63,46],[51,4,64,2,"setSelectedCell"],[51,19,64,17],[51,21,64,20,"cell"],[51,25,64,24],[51,29,64,29,"set"],[51,32,64,32],[51,33,64,33],[52,6,64,35,"selectedCell"],[52,18,64,47],[52,20,64,49,"cell"],[53,4,64,54],[53,5,64,55],[53,6,64,56],[54,4,65,2,"setIsAnimating"],[54,18,65,16],[54,20,65,19,"isAnimating"],[54,31,65,30],[54,35,65,35,"set"],[54,38,65,38],[54,39,65,39],[55,6,65,41,"isAnimating"],[56,4,65,53],[56,5,65,54],[56,6,65,55],[57,4,67,2,"resetGame"],[57,13,67,11],[57,15,67,13,"resetGame"],[57,16,67,13],[57,21,68,4,"set"],[57,24,68,7],[57,25,68,8],[58,6,69,6,"board"],[58,11,69,11],[58,13,69,13,"generateInitialBoard"],[58,33,69,33],[58,34,69,34],[58,35,69,35],[59,6,70,6,"score"],[59,11,70,11],[59,13,70,13],[59,14,70,14],[60,6,71,6,"moves"],[60,11,71,11],[60,13,71,13],[60,14,71,14],[61,6,72,6,"gameOver"],[61,14,72,14],[61,16,72,16],[61,21,72,21],[62,6,73,6,"selectedCell"],[62,18,73,18],[62,20,73,20],[62,24,73,24],[63,6,74,6,"isAnimating"],[63,17,74,17],[63,19,74,19],[64,4,75,4],[64,5,75,5],[65,2,76,0],[65,3,76,1],[65,4,76,2],[65,5,76,3],[66,0,76,4],[66,3]],"functionMap":{"names":["<global>","generateInitialBoard","create$argument_0","setBoard","incrementScore","set$argument_0","incrementMoves","setGameOver","setSelectedCell","setIsAnimating","resetGame"],"mappings":"AAA;6BC+B;CDkB;8CEE;YCQ,yBD;kBEC,gBC,4CD,CF;kBIC,UD,uCC,CJ;eKC,+BL;mBMC,qCN;kBOC,qCP;aQE;MRQ;EFC"},"hasCjsExports":false},"type":"js/module"}]}