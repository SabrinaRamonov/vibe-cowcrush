{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/View","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4kYBDC6LJJXoH7P9rWDi3vkLVB0=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/StyleSheet","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"MK7+k1V+KnvCVW7Kj2k/ydtjmVU=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Dimensions","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"ySrYx/xxJL+A+Ie+sLy/r/EEnF8=","exportNames":["*"],"imports":1}},{"name":"react-native-gesture-handler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":70,"index":181}}],"key":"HJh61WuEUBv/Tn7fS9MiHoQcOfk=","exportNames":["*"],"imports":1}},{"name":"../store/gameStore","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":182},"end":{"line":4,"column":50,"index":232}}],"key":"Nzin5vncLZu0ufFs11KibMj1WNk=","exportNames":["*"],"imports":1}},{"name":"./CowCell","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":233},"end":{"line":5,"column":32,"index":265}}],"key":"GVX3etodbkRCu+eum95b8+iWyGY=","exportNames":["*"],"imports":1}},{"name":"./UFOAbduction","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":266},"end":{"line":6,"column":42,"index":308}}],"key":"AK/PHRyFGV1jTAVFts7xnR5fWAQ=","exportNames":["*"],"imports":1}},{"name":"../utils/gameLogic","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":309},"end":{"line":7,"column":82,"index":391}}],"key":"TANvQZrKumNcUQ3lonhDGbbvRnM=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/components/GameBoard.tsx\",\n    _s = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactNativeWebDistExportsView = require(_dependencyMap[1], \"react-native-web/dist/exports/View\");\n  var View = _interopDefault(_reactNativeWebDistExportsView);\n  var _reactNativeWebDistExportsStyleSheet = require(_dependencyMap[2], \"react-native-web/dist/exports/StyleSheet\");\n  var StyleSheet = _interopDefault(_reactNativeWebDistExportsStyleSheet);\n  var _reactNativeWebDistExportsDimensions = require(_dependencyMap[3], \"react-native-web/dist/exports/Dimensions\");\n  var Dimensions = _interopDefault(_reactNativeWebDistExportsDimensions);\n  var _reactNativeGestureHandler = require(_dependencyMap[4], \"react-native-gesture-handler\");\n  var _storeGameStore = require(_dependencyMap[5], \"../store/gameStore\");\n  var _CowCell = require(_dependencyMap[6], \"./CowCell\");\n  var CowCell = _interopDefault(_CowCell);\n  var _UFOAbduction = require(_dependencyMap[7], \"./UFOAbduction\");\n  var UFOAbduction = _interopDefault(_UFOAbduction);\n  var _utilsGameLogic = require(_dependencyMap[8], \"../utils/gameLogic\");\n  var _reactJsxDevRuntime = require(_dependencyMap[9], \"react/jsx-dev-runtime\");\n  const {\n    width\n  } = Dimensions.default.get('window');\n  const BOARD_SIZE = 8;\n  const CELL_SIZE = Math.min((width - 40) / BOARD_SIZE, 50);\n  const GameBoard = () => {\n    _s();\n    const {\n      board,\n      selectedCell,\n      isAnimating,\n      setBoard,\n      setSelectedCell,\n      setIsAnimating,\n      incrementScore,\n      incrementMoves,\n      setGameOver\n    } = (0, _storeGameStore.useGameStore)();\n    const boardRef = (0, _react.useRef)(board);\n    const abductingCells = (0, _react.useRef)([]);\n    (0, _react.useEffect)(() => {\n      boardRef.current = board;\n    }, [board]);\n    const handleCellPress = (row, col) => {\n      if (isAnimating) return;\n      if (!selectedCell) {\n        setSelectedCell({\n          row,\n          col\n        });\n      } else {\n        const {\n          row: sRow,\n          col: sCol\n        } = selectedCell;\n        const isAdjacent = Math.abs(row - sRow) === 1 && col === sCol || Math.abs(col - sCol) === 1 && row === sRow;\n        if (isAdjacent) {\n          performSwap(sRow, sCol, row, col);\n        } else {\n          setSelectedCell({\n            row,\n            col\n          });\n        }\n      }\n    };\n    const performSwap = async (row1, col1, row2, col2) => {\n      setIsAnimating(true);\n      const newBoard = board.map(row => [...row]);\n\n      // Swap\n      const temp = newBoard[row1][col1];\n      newBoard[row1][col1] = newBoard[row2][col2];\n      newBoard[row2][col2] = temp;\n      setBoard(newBoard);\n      await new Promise(resolve => setTimeout(resolve, 200));\n      const matches = (0, _utilsGameLogic.checkForMatches)(newBoard);\n      if (matches.length > 0) {\n        incrementMoves();\n        setSelectedCell(null);\n        await processMatches(newBoard, matches);\n      } else {\n        // Swap back if no match\n        const temp = newBoard[row1][col1];\n        newBoard[row1][col1] = newBoard[row2][col2];\n        newBoard[row2][col2] = temp;\n        setBoard(newBoard);\n        setSelectedCell(null);\n        await new Promise(resolve => setTimeout(resolve, 200));\n        setIsAnimating(false);\n      }\n    };\n    const processMatches = async (currentBoard, matches) => {\n      // Store cells for UFO abduction animation\n      abductingCells.current = matches;\n\n      // Calculate score\n      const points = matches.length * 10 + (matches.length > 3 ? (matches.length - 3) * 20 : 0);\n      incrementScore(points);\n\n      // Wait for UFO animation\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Remove matched cows\n      const newBoard = currentBoard.map(row => [...row]);\n      matches.forEach(({\n        row,\n        col\n      }) => {\n        newBoard[row][col] = -1;\n      });\n      setBoard(newBoard);\n      await new Promise(resolve => setTimeout(resolve, 200));\n\n      // Apply gravity and refill\n      const filledBoard = (0, _utilsGameLogic.applyGravity)(newBoard);\n      setBoard(filledBoard);\n      await new Promise(resolve => setTimeout(resolve, 400));\n\n      // Check for cascading matches\n      const newMatches = (0, _utilsGameLogic.checkForMatches)(filledBoard);\n      if (newMatches.length > 0) {\n        await processMatches(filledBoard, newMatches);\n      } else {\n        // Check if game over\n        if (!(0, _utilsGameLogic.hasValidMoves)(filledBoard)) {\n          setGameOver(true);\n        }\n        setIsAnimating(false);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNativeGestureHandler.GestureHandlerRootView, {\n      style: styles.container,\n      children: /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(View.default, {\n        style: styles.boardContainer,\n        children: [/*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(View.default, {\n          style: [styles.board, {\n            width: CELL_SIZE * BOARD_SIZE,\n            height: CELL_SIZE * BOARD_SIZE\n          }],\n          children: board.map((row, rowIndex) => row.map((color, colIndex) => /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CowCell.default, {\n            color: color,\n            row: rowIndex,\n            col: colIndex,\n            size: CELL_SIZE,\n            isSelected: selectedCell?.row === rowIndex && selectedCell?.col === colIndex,\n            onPress: () => handleCellPress(rowIndex, colIndex)\n          }, `${rowIndex}-${colIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this), /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(UFOAbduction.default, {\n          cells: abductingCells.current,\n          cellSize: CELL_SIZE,\n          boardSize: BOARD_SIZE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this);\n  };\n  _s(GameBoard, \"lujR3IcFOFoEbNnvnBk6r4+3L1E=\", false, function () {\n    return [_storeGameStore.useGameStore];\n  });\n  _c = GameBoard;\n  const styles = StyleSheet.default.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    boardContainer: {\n      position: 'relative'\n    },\n    board: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      backgroundColor: '#162447',\n      borderRadius: 12,\n      padding: 4,\n      borderWidth: 3,\n      borderColor: '#00ff88'\n    }\n  });\n  var _default = GameBoard;\n  var _c;\n  $RefreshReg$(_c, \"GameBoard\");\n});","lineCount":217,"map":[[14,2,170,0,"Object"],[14,8,170,0],[14,9,170,0,"defineProperty"],[14,23,170,0],[14,24,170,0,"exports"],[14,31,170,0],[15,4,170,0,"enumerable"],[15,14,170,0],[16,4,170,0,"get"],[16,7,170,0],[16,18,170,0,"get"],[16,19,170,0],[17,6,170,0],[17,13,170,0,"_default"],[17,21,170,0],[18,4,170,0],[19,2,170,0],[20,2,1,0],[20,6,1,0,"_react"],[20,12,1,0],[20,15,1,0,"require"],[20,22,1,0],[20,23,1,0,"_dependencyMap"],[20,37,1,0],[21,2,1,49],[21,6,1,49,"_reactNativeWebDistExportsView"],[21,36,1,49],[21,39,1,49,"require"],[21,46,1,49],[21,47,1,49,"_dependencyMap"],[21,61,1,49],[22,2,1,49],[22,6,1,49,"View"],[22,10,1,49],[22,13,1,49,"_interopDefault"],[22,28,1,49],[22,29,1,49,"_reactNativeWebDistExportsView"],[22,59,1,49],[23,2,1,49],[23,6,1,49,"_reactNativeWebDistExportsStyleSheet"],[23,42,1,49],[23,45,1,49,"require"],[23,52,1,49],[23,53,1,49,"_dependencyMap"],[23,67,1,49],[24,2,1,49],[24,6,1,49,"StyleSheet"],[24,16,1,49],[24,19,1,49,"_interopDefault"],[24,34,1,49],[24,35,1,49,"_reactNativeWebDistExportsStyleSheet"],[24,71,1,49],[25,2,1,49],[25,6,1,49,"_reactNativeWebDistExportsDimensions"],[25,42,1,49],[25,45,1,49,"require"],[25,52,1,49],[25,53,1,49,"_dependencyMap"],[25,67,1,49],[26,2,1,49],[26,6,1,49,"Dimensions"],[26,16,1,49],[26,19,1,49,"_interopDefault"],[26,34,1,49],[26,35,1,49,"_reactNativeWebDistExportsDimensions"],[26,71,1,49],[27,2,3,0],[27,6,3,0,"_reactNativeGestureHandler"],[27,32,3,0],[27,35,3,0,"require"],[27,42,3,0],[27,43,3,0,"_dependencyMap"],[27,57,3,0],[28,2,4,0],[28,6,4,0,"_storeGameStore"],[28,21,4,0],[28,24,4,0,"require"],[28,31,4,0],[28,32,4,0,"_dependencyMap"],[28,46,4,0],[29,2,5,0],[29,6,5,0,"_CowCell"],[29,14,5,0],[29,17,5,0,"require"],[29,24,5,0],[29,25,5,0,"_dependencyMap"],[29,39,5,0],[30,2,5,0],[30,6,5,0,"CowCell"],[30,13,5,0],[30,16,5,0,"_interopDefault"],[30,31,5,0],[30,32,5,0,"_CowCell"],[30,40,5,0],[31,2,6,0],[31,6,6,0,"_UFOAbduction"],[31,19,6,0],[31,22,6,0,"require"],[31,29,6,0],[31,30,6,0,"_dependencyMap"],[31,44,6,0],[32,2,6,0],[32,6,6,0,"UFOAbduction"],[32,18,6,0],[32,21,6,0,"_interopDefault"],[32,36,6,0],[32,37,6,0,"_UFOAbduction"],[32,50,6,0],[33,2,7,0],[33,6,7,0,"_utilsGameLogic"],[33,21,7,0],[33,24,7,0,"require"],[33,31,7,0],[33,32,7,0,"_dependencyMap"],[33,46,7,0],[34,2,7,82],[34,6,7,82,"_reactJsxDevRuntime"],[34,25,7,82],[34,28,7,82,"require"],[34,35,7,82],[34,36,7,82,"_dependencyMap"],[34,50,7,82],[35,2,9,0],[35,8,9,6],[36,4,9,8,"width"],[37,2,9,14],[37,3,9,15],[37,6,9,18,"Dimensions"],[37,16,9,28],[37,17,9,28,"default"],[37,24,9,28],[37,25,9,29,"get"],[37,28,9,32],[37,29,9,33],[37,37,9,41],[37,38,9,42],[38,2,10,0],[38,8,10,6,"BOARD_SIZE"],[38,18,10,16],[38,21,10,19],[38,22,10,20],[39,2,11,0],[39,8,11,6,"CELL_SIZE"],[39,17,11,15],[39,20,11,18,"Math"],[39,24,11,22],[39,25,11,23,"min"],[39,28,11,26],[39,29,11,27],[39,30,11,28,"width"],[39,35,11,33],[39,38,11,36],[39,40,11,38],[39,44,11,42,"BOARD_SIZE"],[39,54,11,52],[39,56,11,54],[39,58,11,56],[39,59,11,57],[40,2,13,0],[40,8,13,6,"GameBoard"],[40,17,13,25],[40,20,13,28,"GameBoard"],[40,21,13,28],[40,26,13,34],[41,4,13,34,"_s"],[41,6,13,34],[42,4,14,2],[42,10,14,8],[43,6,15,4,"board"],[43,11,15,9],[44,6,16,4,"selectedCell"],[44,18,16,16],[45,6,17,4,"isAnimating"],[45,17,17,15],[46,6,18,4,"setBoard"],[46,14,18,12],[47,6,19,4,"setSelectedCell"],[47,21,19,19],[48,6,20,4,"setIsAnimating"],[48,20,20,18],[49,6,21,4,"incrementScore"],[49,20,21,18],[50,6,22,4,"incrementMoves"],[50,20,22,18],[51,6,23,4,"setGameOver"],[52,4,24,2],[52,5,24,3],[52,8,24,6],[52,12,24,6,"useGameStore"],[52,27,24,18],[52,28,24,18,"useGameStore"],[52,40,24,18],[52,42,24,19],[52,43,24,20],[53,4,26,2],[53,10,26,8,"boardRef"],[53,18,26,16],[53,21,26,19],[53,25,26,19,"useRef"],[53,31,26,25],[53,32,26,25,"useRef"],[53,38,26,25],[53,40,26,26,"board"],[53,45,26,31],[53,46,26,32],[54,4,27,2],[54,10,27,8,"abductingCells"],[54,24,27,22],[54,27,27,25],[54,31,27,25,"useRef"],[54,37,27,31],[54,38,27,31,"useRef"],[54,44,27,31],[54,46,27,64],[54,48,27,66],[54,49,27,67],[55,4,29,2],[55,8,29,2,"useEffect"],[55,14,29,11],[55,15,29,11,"useEffect"],[55,24,29,11],[55,26,29,12],[55,32,29,18],[56,6,30,4,"boardRef"],[56,14,30,12],[56,15,30,13,"current"],[56,22,30,20],[56,25,30,23,"board"],[56,30,30,28],[57,4,31,2],[57,5,31,3],[57,7,31,5],[57,8,31,6,"board"],[57,13,31,11],[57,14,31,12],[57,15,31,13],[58,4,33,2],[58,10,33,8,"handleCellPress"],[58,25,33,23],[58,28,33,26,"handleCellPress"],[58,29,33,27,"row"],[58,32,33,38],[58,34,33,40,"col"],[58,37,33,51],[58,42,33,56],[59,6,34,4],[59,10,34,8,"isAnimating"],[59,21,34,19],[59,23,34,21],[60,6,36,4],[60,10,36,8],[60,11,36,9,"selectedCell"],[60,23,36,21],[60,25,36,23],[61,8,37,6,"setSelectedCell"],[61,23,37,21],[61,24,37,22],[62,10,37,24,"row"],[62,13,37,27],[63,10,37,29,"col"],[64,8,37,33],[64,9,37,34],[64,10,37,35],[65,6,38,4],[65,7,38,5],[65,13,38,11],[66,8,39,6],[66,14,39,12],[67,10,39,14,"row"],[67,13,39,17],[67,15,39,19,"sRow"],[67,19,39,23],[68,10,39,25,"col"],[68,13,39,28],[68,15,39,30,"sCol"],[69,8,39,35],[69,9,39,36],[69,12,39,39,"selectedCell"],[69,24,39,51],[70,8,40,6],[70,14,40,12,"isAdjacent"],[70,24,40,22],[70,27,41,9,"Math"],[70,31,41,13],[70,32,41,14,"abs"],[70,35,41,17],[70,36,41,18,"row"],[70,39,41,21],[70,42,41,24,"sRow"],[70,46,41,28],[70,47,41,29],[70,52,41,34],[70,53,41,35],[70,57,41,39,"col"],[70,60,41,42],[70,65,41,47,"sCol"],[70,69,41,51],[70,73,42,9,"Math"],[70,77,42,13],[70,78,42,14,"abs"],[70,81,42,17],[70,82,42,18,"col"],[70,85,42,21],[70,88,42,24,"sCol"],[70,92,42,28],[70,93,42,29],[70,98,42,34],[70,99,42,35],[70,103,42,39,"row"],[70,106,42,42],[70,111,42,47,"sRow"],[70,115,42,52],[71,8,44,6],[71,12,44,10,"isAdjacent"],[71,22,44,20],[71,24,44,22],[72,10,45,8,"performSwap"],[72,21,45,19],[72,22,45,20,"sRow"],[72,26,45,24],[72,28,45,26,"sCol"],[72,32,45,30],[72,34,45,32,"row"],[72,37,45,35],[72,39,45,37,"col"],[72,42,45,40],[72,43,45,41],[73,8,46,6],[73,9,46,7],[73,15,46,13],[74,10,47,8,"setSelectedCell"],[74,25,47,23],[74,26,47,24],[75,12,47,26,"row"],[75,15,47,29],[76,12,47,31,"col"],[77,10,47,35],[77,11,47,36],[77,12,47,37],[78,8,48,6],[79,6,49,4],[80,4,50,2],[80,5,50,3],[81,4,52,2],[81,10,52,8,"performSwap"],[81,21,52,19],[81,24,52,22],[81,30,52,22,"performSwap"],[81,31,52,29,"row1"],[81,35,52,41],[81,37,52,43,"col1"],[81,41,52,55],[81,43,52,57,"row2"],[81,47,52,69],[81,49,52,71,"col2"],[81,53,52,83],[81,58,52,88],[82,6,53,4,"setIsAnimating"],[82,20,53,18],[82,21,53,19],[82,25,53,23],[82,26,53,24],[83,6,54,4],[83,12,54,10,"newBoard"],[83,20,54,18],[83,23,54,21,"board"],[83,28,54,26],[83,29,54,27,"map"],[83,32,54,30],[83,33,54,32,"row"],[83,36,54,35],[83,40,54,40],[83,41,54,41],[83,44,54,44,"row"],[83,47,54,47],[83,48,54,48],[83,49,54,49],[85,6,56,4],[86,6,57,4],[86,12,57,10,"temp"],[86,16,57,14],[86,19,57,17,"newBoard"],[86,27,57,25],[86,28,57,26,"row1"],[86,32,57,30],[86,33,57,31],[86,34,57,32,"col1"],[86,38,57,36],[86,39,57,37],[87,6,58,4,"newBoard"],[87,14,58,12],[87,15,58,13,"row1"],[87,19,58,17],[87,20,58,18],[87,21,58,19,"col1"],[87,25,58,23],[87,26,58,24],[87,29,58,27,"newBoard"],[87,37,58,35],[87,38,58,36,"row2"],[87,42,58,40],[87,43,58,41],[87,44,58,42,"col2"],[87,48,58,46],[87,49,58,47],[88,6,59,4,"newBoard"],[88,14,59,12],[88,15,59,13,"row2"],[88,19,59,17],[88,20,59,18],[88,21,59,19,"col2"],[88,25,59,23],[88,26,59,24],[88,29,59,27,"temp"],[88,33,59,31],[89,6,61,4,"setBoard"],[89,14,61,12],[89,15,61,13,"newBoard"],[89,23,61,21],[89,24,61,22],[90,6,62,4],[90,12,62,10],[90,16,62,14,"Promise"],[90,23,62,21],[90,24,62,23,"resolve"],[90,31,62,30],[90,35,62,35,"setTimeout"],[90,45,62,45],[90,46,62,46,"resolve"],[90,53,62,53],[90,55,62,55],[90,58,62,58],[90,59,62,59],[90,60,62,60],[91,6,64,4],[91,12,64,10,"matches"],[91,19,64,17],[91,22,64,20],[91,26,64,20,"checkForMatches"],[91,41,64,35],[91,42,64,35,"checkForMatches"],[91,57,64,35],[91,59,64,36,"newBoard"],[91,67,64,44],[91,68,64,45],[92,6,66,4],[92,10,66,8,"matches"],[92,17,66,15],[92,18,66,16,"length"],[92,24,66,22],[92,27,66,25],[92,28,66,26],[92,30,66,28],[93,8,67,6,"incrementMoves"],[93,22,67,20],[93,23,67,21],[93,24,67,22],[94,8,68,6,"setSelectedCell"],[94,23,68,21],[94,24,68,22],[94,28,68,26],[94,29,68,27],[95,8,69,6],[95,14,69,12,"processMatches"],[95,28,69,26],[95,29,69,27,"newBoard"],[95,37,69,35],[95,39,69,37,"matches"],[95,46,69,44],[95,47,69,45],[96,6,70,4],[96,7,70,5],[96,13,70,11],[97,8,71,6],[98,8,72,6],[98,14,72,12,"temp"],[98,18,72,16],[98,21,72,19,"newBoard"],[98,29,72,27],[98,30,72,28,"row1"],[98,34,72,32],[98,35,72,33],[98,36,72,34,"col1"],[98,40,72,38],[98,41,72,39],[99,8,73,6,"newBoard"],[99,16,73,14],[99,17,73,15,"row1"],[99,21,73,19],[99,22,73,20],[99,23,73,21,"col1"],[99,27,73,25],[99,28,73,26],[99,31,73,29,"newBoard"],[99,39,73,37],[99,40,73,38,"row2"],[99,44,73,42],[99,45,73,43],[99,46,73,44,"col2"],[99,50,73,48],[99,51,73,49],[100,8,74,6,"newBoard"],[100,16,74,14],[100,17,74,15,"row2"],[100,21,74,19],[100,22,74,20],[100,23,74,21,"col2"],[100,27,74,25],[100,28,74,26],[100,31,74,29,"temp"],[100,35,74,33],[101,8,75,6,"setBoard"],[101,16,75,14],[101,17,75,15,"newBoard"],[101,25,75,23],[101,26,75,24],[102,8,76,6,"setSelectedCell"],[102,23,76,21],[102,24,76,22],[102,28,76,26],[102,29,76,27],[103,8,77,6],[103,14,77,12],[103,18,77,16,"Promise"],[103,25,77,23],[103,26,77,25,"resolve"],[103,33,77,32],[103,37,77,37,"setTimeout"],[103,47,77,47],[103,48,77,48,"resolve"],[103,55,77,55],[103,57,77,57],[103,60,77,60],[103,61,77,61],[103,62,77,62],[104,8,78,6,"setIsAnimating"],[104,22,78,20],[104,23,78,21],[104,28,78,26],[104,29,78,27],[105,6,79,4],[106,4,80,2],[106,5,80,3],[107,4,82,2],[107,10,82,8,"processMatches"],[107,24,82,22],[107,27,82,25],[107,33,82,25,"processMatches"],[107,34,82,32,"currentBoard"],[107,46,82,56],[107,48,82,58,"matches"],[107,55,82,97],[107,60,82,102],[108,6,83,4],[109,6,84,4,"abductingCells"],[109,20,84,18],[109,21,84,19,"current"],[109,28,84,26],[109,31,84,29,"matches"],[109,38,84,36],[111,6,86,4],[112,6,87,4],[112,12,87,10,"points"],[112,18,87,16],[112,21,87,19,"matches"],[112,28,87,26],[112,29,87,27,"length"],[112,35,87,33],[112,38,87,36],[112,40,87,38],[112,44,87,42,"matches"],[112,51,87,49],[112,52,87,50,"length"],[112,58,87,56],[112,61,87,59],[112,62,87,60],[112,65,87,63],[112,66,87,64,"matches"],[112,73,87,71],[112,74,87,72,"length"],[112,80,87,78],[112,83,87,81],[112,84,87,82],[112,88,87,86],[112,90,87,88],[112,93,87,91],[112,94,87,92],[112,95,87,93],[113,6,88,4,"incrementScore"],[113,20,88,18],[113,21,88,19,"points"],[113,27,88,25],[113,28,88,26],[115,6,90,4],[116,6,91,4],[116,12,91,10],[116,16,91,14,"Promise"],[116,23,91,21],[116,24,91,23,"resolve"],[116,31,91,30],[116,35,91,35,"setTimeout"],[116,45,91,45],[116,46,91,46,"resolve"],[116,53,91,53],[116,55,91,55],[116,59,91,59],[116,60,91,60],[116,61,91,61],[118,6,93,4],[119,6,94,4],[119,12,94,10,"newBoard"],[119,20,94,18],[119,23,94,21,"currentBoard"],[119,35,94,33],[119,36,94,34,"map"],[119,39,94,37],[119,40,94,39,"row"],[119,43,94,42],[119,47,94,47],[119,48,94,48],[119,51,94,51,"row"],[119,54,94,54],[119,55,94,55],[119,56,94,56],[120,6,95,4,"matches"],[120,13,95,11],[120,14,95,12,"forEach"],[120,21,95,19],[120,22,95,20],[120,23,95,21],[121,8,95,23,"row"],[121,11,95,26],[122,8,95,28,"col"],[123,6,95,32],[123,7,95,33],[123,12,95,38],[124,8,96,6,"newBoard"],[124,16,96,14],[124,17,96,15,"row"],[124,20,96,18],[124,21,96,19],[124,22,96,20,"col"],[124,25,96,23],[124,26,96,24],[124,29,96,27],[124,30,96,28],[124,31,96,29],[125,6,97,4],[125,7,97,5],[125,8,97,6],[126,6,99,4,"setBoard"],[126,14,99,12],[126,15,99,13,"newBoard"],[126,23,99,21],[126,24,99,22],[127,6,100,4],[127,12,100,10],[127,16,100,14,"Promise"],[127,23,100,21],[127,24,100,23,"resolve"],[127,31,100,30],[127,35,100,35,"setTimeout"],[127,45,100,45],[127,46,100,46,"resolve"],[127,53,100,53],[127,55,100,55],[127,58,100,58],[127,59,100,59],[127,60,100,60],[129,6,102,4],[130,6,103,4],[130,12,103,10,"filledBoard"],[130,23,103,21],[130,26,103,24],[130,30,103,24,"applyGravity"],[130,45,103,36],[130,46,103,36,"applyGravity"],[130,58,103,36],[130,60,103,37,"newBoard"],[130,68,103,45],[130,69,103,46],[131,6,104,4,"setBoard"],[131,14,104,12],[131,15,104,13,"filledBoard"],[131,26,104,24],[131,27,104,25],[132,6,105,4],[132,12,105,10],[132,16,105,14,"Promise"],[132,23,105,21],[132,24,105,23,"resolve"],[132,31,105,30],[132,35,105,35,"setTimeout"],[132,45,105,45],[132,46,105,46,"resolve"],[132,53,105,53],[132,55,105,55],[132,58,105,58],[132,59,105,59],[132,60,105,60],[134,6,107,4],[135,6,108,4],[135,12,108,10,"newMatches"],[135,22,108,20],[135,25,108,23],[135,29,108,23,"checkForMatches"],[135,44,108,38],[135,45,108,38,"checkForMatches"],[135,60,108,38],[135,62,108,39,"filledBoard"],[135,73,108,50],[135,74,108,51],[136,6,109,4],[136,10,109,8,"newMatches"],[136,20,109,18],[136,21,109,19,"length"],[136,27,109,25],[136,30,109,28],[136,31,109,29],[136,33,109,31],[137,8,110,6],[137,14,110,12,"processMatches"],[137,28,110,26],[137,29,110,27,"filledBoard"],[137,40,110,38],[137,42,110,40,"newMatches"],[137,52,110,50],[137,53,110,51],[138,6,111,4],[138,7,111,5],[138,13,111,11],[139,8,112,6],[140,8,113,6],[140,12,113,10],[140,13,113,11],[140,17,113,11,"hasValidMoves"],[140,32,113,24],[140,33,113,24,"hasValidMoves"],[140,46,113,24],[140,48,113,25,"filledBoard"],[140,59,113,36],[140,60,113,37],[140,62,113,39],[141,10,114,8,"setGameOver"],[141,21,114,19],[141,22,114,20],[141,26,114,24],[141,27,114,25],[142,8,115,6],[143,8,116,6,"setIsAnimating"],[143,22,116,20],[143,23,116,21],[143,28,116,26],[143,29,116,27],[144,6,117,4],[145,4,118,2],[145,5,118,3],[146,4,120,2],[146,24,121,4],[146,28,121,4,"_reactJsxDevRuntime"],[146,47,121,4],[146,48,121,4,"jsxDEV"],[146,54,121,4],[146,56,121,5,"_reactNativeGestureHandler"],[146,82,121,27],[146,83,121,27,"GestureHandlerRootView"],[146,105,121,27],[147,6,121,28,"style"],[147,11,121,33],[147,13,121,35,"styles"],[147,19,121,41],[147,20,121,42,"container"],[147,29,121,52],[148,6,121,52,"children"],[148,14,121,52],[148,29,122,6],[148,33,122,6,"_reactJsxDevRuntime"],[148,52,122,6],[148,53,122,6,"jsxDEV"],[148,59,122,6],[148,61,122,7,"View"],[148,65,122,11],[148,66,122,11,"default"],[148,73,122,11],[149,8,122,12,"style"],[149,13,122,17],[149,15,122,19,"styles"],[149,21,122,25],[149,22,122,26,"boardContainer"],[149,36,122,41],[150,8,122,41,"children"],[150,16,122,41],[150,32,123,8],[150,36,123,8,"_reactJsxDevRuntime"],[150,55,123,8],[150,56,123,8,"jsxDEV"],[150,62,123,8],[150,64,123,9,"View"],[150,68,123,13],[150,69,123,13,"default"],[150,76,123,13],[151,10,123,14,"style"],[151,15,123,19],[151,17,123,21],[151,18,123,22,"styles"],[151,24,123,28],[151,25,123,29,"board"],[151,30,123,34],[151,32,123,36],[152,12,123,38,"width"],[152,17,123,43],[152,19,123,45,"CELL_SIZE"],[152,28,123,54],[152,31,123,57,"BOARD_SIZE"],[152,41,123,67],[153,12,123,69,"height"],[153,18,123,75],[153,20,123,77,"CELL_SIZE"],[153,29,123,86],[153,32,123,89,"BOARD_SIZE"],[154,10,123,100],[154,11,123,101],[154,12,123,103],[155,10,123,103,"children"],[155,18,123,103],[155,20,124,11,"board"],[155,25,124,16],[155,26,124,17,"map"],[155,29,124,20],[155,30,124,21],[155,31,124,22,"row"],[155,34,124,25],[155,36,124,27,"rowIndex"],[155,44,124,35],[155,49,125,12,"row"],[155,52,125,15],[155,53,125,16,"map"],[155,56,125,19],[155,57,125,20],[155,58,125,21,"color"],[155,63,125,26],[155,65,125,28,"colIndex"],[155,73,125,36],[155,91,126,14],[155,95,126,14,"_reactJsxDevRuntime"],[155,114,126,14],[155,115,126,14,"jsxDEV"],[155,121,126,14],[155,123,126,15,"CowCell"],[155,130,126,22],[155,131,126,22,"default"],[155,138,126,22],[156,12,128,16,"color"],[156,17,128,21],[156,19,128,23,"color"],[156,24,128,29],[157,12,129,16,"row"],[157,15,129,19],[157,17,129,21,"rowIndex"],[157,25,129,30],[158,12,130,16,"col"],[158,15,130,19],[158,17,130,21,"colIndex"],[158,25,130,30],[159,12,131,16,"size"],[159,16,131,20],[159,18,131,22,"CELL_SIZE"],[159,27,131,32],[160,12,132,16,"isSelected"],[160,22,132,26],[160,24,133,18,"selectedCell"],[160,36,133,30],[160,38,133,32,"row"],[160,41,133,35],[160,46,133,40,"rowIndex"],[160,54,133,48],[160,58,133,52,"selectedCell"],[160,70,133,64],[160,72,133,66,"col"],[160,75,133,69],[160,80,133,74,"colIndex"],[160,88,134,17],[161,12,135,16,"onPress"],[161,19,135,23],[161,21,135,25,"onPress"],[161,22,135,25],[161,27,135,31,"handleCellPress"],[161,42,135,46],[161,43,135,47,"rowIndex"],[161,51,135,55],[161,53,135,57,"colIndex"],[161,61,135,65],[162,10,135,67],[162,13,127,21],[162,16,127,24,"rowIndex"],[162,24,127,32],[162,28,127,36,"colIndex"],[162,36,127,44],[162,38,127,46],[163,12,127,46,"fileName"],[163,20,127,46],[163,22,127,46,"_jsxFileName"],[163,34,127,46],[164,12,127,46,"lineNumber"],[164,22,127,46],[165,12,127,46,"columnNumber"],[165,24,127,46],[166,10,127,46],[166,17,136,15],[166,18,137,13],[166,19,138,10],[167,8,138,11],[168,10,138,11,"fileName"],[168,18,138,11],[168,20,138,11,"_jsxFileName"],[168,32,138,11],[169,10,138,11,"lineNumber"],[169,20,138,11],[170,10,138,11,"columnNumber"],[170,22,138,11],[171,8,138,11],[171,15,139,14],[171,16,139,15],[171,31,140,8],[171,35,140,8,"_reactJsxDevRuntime"],[171,54,140,8],[171,55,140,8,"jsxDEV"],[171,61,140,8],[171,63,140,9,"UFOAbduction"],[171,75,140,21],[171,76,140,21,"default"],[171,83,140,21],[172,10,141,10,"cells"],[172,15,141,15],[172,17,141,17,"abductingCells"],[172,31,141,31],[172,32,141,32,"current"],[172,39,141,40],[173,10,142,10,"cellSize"],[173,18,142,18],[173,20,142,20,"CELL_SIZE"],[173,29,142,30],[174,10,143,10,"boardSize"],[174,19,143,19],[174,21,143,21,"BOARD_SIZE"],[175,8,143,32],[176,10,143,32,"fileName"],[176,18,143,32],[176,20,143,32,"_jsxFileName"],[176,32,143,32],[177,10,143,32,"lineNumber"],[177,20,143,32],[178,10,143,32,"columnNumber"],[178,22,143,32],[179,8,143,32],[179,15,144,9],[179,16,144,10],[180,6,144,10],[181,8,144,10,"fileName"],[181,16,144,10],[181,18,144,10,"_jsxFileName"],[181,30,144,10],[182,8,144,10,"lineNumber"],[182,18,144,10],[183,8,144,10,"columnNumber"],[183,20,144,10],[184,6,144,10],[184,13,145,12],[185,4,145,13],[186,6,145,13,"fileName"],[186,14,145,13],[186,16,145,13,"_jsxFileName"],[186,28,145,13],[187,6,145,13,"lineNumber"],[187,16,145,13],[188,6,145,13,"columnNumber"],[188,18,145,13],[189,4,145,13],[189,11,146,28],[189,12,146,29],[190,2,148,0],[190,3,148,1],[191,2,148,2,"_s"],[191,4,148,2],[191,5,13,6,"GameBoard"],[191,14,13,25],[192,4,13,25],[192,12,24,6,"useGameStore"],[192,27,24,18],[192,28,24,18,"useGameStore"],[192,40,24,18],[193,2,24,18],[194,2,24,18,"_c"],[194,4,24,18],[194,7,13,6,"GameBoard"],[194,16,13,25],[195,2,150,0],[195,8,150,6,"styles"],[195,14,150,12],[195,17,150,15,"StyleSheet"],[195,27,150,25],[195,28,150,25,"default"],[195,35,150,25],[195,36,150,26,"create"],[195,42,150,32],[195,43,150,33],[196,4,151,2,"container"],[196,13,151,11],[196,15,151,13],[197,6,152,4,"flex"],[197,10,152,8],[197,12,152,10],[197,13,152,11],[198,6,153,4,"justifyContent"],[198,20,153,18],[198,22,153,20],[198,30,153,28],[199,6,154,4,"alignItems"],[199,16,154,14],[199,18,154,16],[200,4,155,2],[200,5,155,3],[201,4,156,2,"boardContainer"],[201,18,156,16],[201,20,156,18],[202,6,157,4,"position"],[202,14,157,12],[202,16,157,14],[203,4,158,2],[203,5,158,3],[204,4,159,2,"board"],[204,9,159,7],[204,11,159,9],[205,6,160,4,"flexDirection"],[205,19,160,17],[205,21,160,19],[205,26,160,24],[206,6,161,4,"flexWrap"],[206,14,161,12],[206,16,161,14],[206,22,161,20],[207,6,162,4,"backgroundColor"],[207,21,162,19],[207,23,162,21],[207,32,162,30],[208,6,163,4,"borderRadius"],[208,18,163,16],[208,20,163,18],[208,22,163,20],[209,6,164,4,"padding"],[209,13,164,11],[209,15,164,13],[209,16,164,14],[210,6,165,4,"borderWidth"],[210,17,165,15],[210,19,165,17],[210,20,165,18],[211,6,166,4,"borderColor"],[211,17,166,15],[211,19,166,17],[212,4,167,2],[213,2,168,0],[213,3,168,1],[213,4,168,2],[214,2,170,0],[214,6,170,0,"_default"],[214,14,170,0],[214,17,170,15,"GameBoard"],[214,26,170,24],[215,2,170,25],[215,6,170,25,"_c"],[215,8,170,25],[216,2,170,25,"$RefreshReg$"],[216,14,170,25],[216,15,170,25,"_c"],[216,17,170,25],[217,0,170,25],[217,3]],"functionMap":{"names":["<global>","GameBoard","useEffect$argument_0","handleCellPress","performSwap","board.map$argument_0","Promise$argument_0","processMatches","currentBoard.map$argument_0","matches.forEach$argument_0","row.map$argument_0","CowCell.props.onPress"],"mappings":"AAA;4BCY;YCgB;GDE;0BEE;GFiB;sBGE;+BCE,iBD;sBEQ,qCF;wBEe,qCF;GHG;yBME;sBDS,sCC;sCCG,iBD;oBEC;KFE;sBDG,qCC;sBDK,qCC;GNa;qBIM;oBKC;yBCU,yCD;aLE,CJ;CDW"},"hasCjsExports":false},"type":"js/module"}]}